# scripts/build_single.py
from __future__ import annotations

import os
from pathlib import Path

ROOT = Path(__file__).resolve().parent.parent
OUT_FILE = ROOT / "juicyfox_bot_single.py"

INCLUDE_DIRS = ["api", "apps", "modules", "shared"]

HEADER = """# ==============================================================
# Autogenerated by scripts/build_single.py
# DO NOT EDIT MANUALLY — your changes will be overwritten.
#
# Run mode controlled via RUN_MODE=api | worker | both
# ==============================================================

"""

def collect_sources() -> list[str]:
    sources: list[str] = []
    seen_imports: set[str] = set()

    for folder in INCLUDE_DIRS:
        base = ROOT / folder
        if not base.exists():
            continue

        for path in sorted(base.rglob("*.py")):
            if path.name == "__init__.py":
                continue

            rel = path.relative_to(ROOT)
            with open(path, "r", encoding="utf-8") as f:
                code = f.readlines()

            processed: list[str] = []
            for line in code:
                if line.startswith("from __future__"):
                    continue
                if line.startswith("import") or line.startswith("from"):
                    if line not in seen_imports:
                        seen_imports.add(line)
                        processed.append(line)
                else:
                    processed.append(line)

            sources.append(f"\n# ==== {rel} ====\n")
            sources.extend(processed)

    return [HEADER] + sources


def build():
    code = collect_sources()
    with open(OUT_FILE, "w", encoding="utf-8") as f:
        f.writelines(code)
    print(f"[build_single] ✅ Generated {OUT_FILE}")


if __name__ == "__main__":
    build()
